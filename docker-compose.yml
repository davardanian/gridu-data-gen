# docker-compose.yml

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-data_assistant}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    # No persistent volumes needed - data is session-based
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    ports:
      - "8501:8501"
    environment:
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-data_assistant}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - PROJECT_ID=${PROJECT_ID:-gd-gcp-gridu-genai}
      - LOCATION=${LOCATION:-us-central1}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY:-}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY:-}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-https://cloud.langfuse.com}
      # Logging configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
      - APP_ENV=${APP_ENV:-production}
    volumes:
      # Mount gcloud credentials for Vertex AI authentication
      - ~/.config/gcloud:/root/.config/gcloud:ro
    depends_on:
      postgres:
        condition: service_healthy
    # No persistent volumes needed - data is session-based
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Configure logging for Docker
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
